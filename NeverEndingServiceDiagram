<mxfile host="app.diagrams.net" modified="2022-07-22T20:13:29.666Z" agent="5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36" etag="x5n2I7w3yGYqnWs-w3qB" version="20.1.4" type="github">
  <diagram id="5J7tqZ6G3YMk0Y6RbLJi" name="Page-1">
    <mxGraphModel dx="735" dy="657" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="8RQcB87svCS8glU-FJbw-1" value="&lt;b&gt;MainActivity&lt;/b&gt;&lt;br&gt;TAG: String&lt;br&gt;ACTIVITY_RECOGNITION_CODE: Int&lt;br&gt;binding: ActivityMainBinding?&lt;br&gt;viewModel: MyViewModel" style="rounded=1;whiteSpace=wrap;html=1;verticalAlign=top;fontFamily=Courier New;arcSize=5;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="60" y="30" width="430" height="340" as="geometry" />
        </mxCell>
        <mxCell id="8RQcB87svCS8glU-FJbw-3" value="&lt;font style=&quot;font-size: 10px;&quot;&gt;onCreate(Bundle?){&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;super()&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;binding = ActivityMainBinding.inflte(layoutInflater)&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;setContentView(binding?.root)&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;initObservers()&lt;br&gt;&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;viewModel.startCounter()&lt;br&gt;}&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontFamily=Courier New;align=left;verticalAlign=top;arcSize=5;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="80" y="110" width="370" height="130" as="geometry" />
        </mxCell>
        <mxCell id="8RQcB87svCS8glU-FJbw-4" value="initObservers(){&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;Log()&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;viewModel.currentCounter.observe(/*owner*/ this) {value -&amp;gt;&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;Log()&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;binding?.value?.text = value.toString()&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;}&lt;br&gt;}" style="rounded=0;whiteSpace=wrap;html=1;fontFamily=Courier New;fontSize=10;fillColor=none;align=left;verticalAlign=top;" parent="1" vertex="1">
          <mxGeometry x="80" y="260" width="400" height="100" as="geometry" />
        </mxCell>
        <mxCell id="8RQcB87svCS8glU-FJbw-5" value="&lt;b&gt;CounterService: Service()&lt;/b&gt;&lt;br&gt;wakeLock: PowerManager.WakeLock?&lt;br&gt;currentServiceNotification: ServiceNotification?&lt;br&gt;handler: Handler?&lt;br&gt;timeoutRunnable: Runnable" style="rounded=1;whiteSpace=wrap;html=1;fontFamily=Courier New;fontSize=10;fillColor=none;arcSize=4;verticalAlign=top;" parent="1" vertex="1">
          <mxGeometry x="530" y="30" width="570" height="1030" as="geometry" />
        </mxCell>
        <mxCell id="8RQcB87svCS8glU-FJbw-6" value="companion object {&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;var currentService: CounterService? = null&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;var counter: MutableLiveData&amp;lt;Int&amp;gt; = MutableLiveData(0)&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;private val TAG = CounterService::class.java.simpleName&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;private const val NOTIFICATION_ID = 9974&lt;br&gt;}" style="rounded=0;whiteSpace=wrap;html=1;fontFamily=Courier New;fontSize=10;fillColor=none;align=left;verticalAlign=top;" parent="1" vertex="1">
          <mxGeometry x="540" y="100" width="390" height="80" as="geometry" />
        </mxCell>
        <mxCell id="8RQcB87svCS8glU-FJbw-7" value="onCreate(){&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;super()&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;currentService = this&lt;br&gt;}" style="rounded=0;whiteSpace=wrap;html=1;fontFamily=Courier New;fontSize=10;fillColor=none;align=left;verticalAlign=top;" parent="1" vertex="1">
          <mxGeometry x="540" y="190" width="180" height="60" as="geometry" />
        </mxCell>
        <mxCell id="8RQcB87svCS8glU-FJbw-8" value="onStartCommand(Intent, flags: Int, startId: Int): Int {&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;super()&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;Log()&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;startWakeLock()&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;if(Build.VERSION.SDK_INT &amp;gt;= Build.VERSION_CODES.O){&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;try {&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;Log()&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;currentServiceNotification = ServiceNotification(&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;this, NOTIFICATION_ID, /*runningInBackground*/ false)&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;if(Build.VERSION.SDK_INT &amp;gt;= Build.VERSION_CODES.Q){&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;startForeground()&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;} else {&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;startForeground()&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;}&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;Log()&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;} catch () {...}&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;}&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;startCounter()&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;return START_REDELIVER_INTENT&lt;br&gt;}" style="rounded=0;whiteSpace=wrap;html=1;fontFamily=Courier New;fontSize=10;fillColor=none;align=left;verticalAlign=top;" parent="1" vertex="1">
          <mxGeometry x="540" y="260" width="540" height="250" as="geometry" />
        </mxCell>
        <mxCell id="8RQcB87svCS8glU-FJbw-9" value="onBind(Intent?): IBinder? {&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;Log()&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;return null&lt;br&gt;}" style="rounded=0;whiteSpace=wrap;html=1;fontFamily=Courier New;fontSize=10;fillColor=none;align=left;verticalAlign=top;" parent="1" vertex="1">
          <mxGeometry x="540" y="520" width="170" height="60" as="geometry" />
        </mxCell>
        <mxCell id="8RQcB87svCS8glU-FJbw-10" value="startWakeLock(){&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;val powerManager = getSystemService() as PowerManager&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;wakeLock = powerManager.newWakeLock(...)&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;wakeLock?.acquire()&lt;br&gt;}" style="rounded=0;whiteSpace=wrap;html=1;fontFamily=Courier New;fontSize=10;fillColor=none;align=left;verticalAlign=top;" parent="1" vertex="1">
          <mxGeometry x="540" y="590" width="370" height="70" as="geometry" />
        </mxCell>
        <mxCell id="8RQcB87svCS8glU-FJbw-11" value="startCounter(){&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;Log()&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;val looper: Looper? = Looper.myLooper()&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;looper.let {&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;handler = Handler(looper!!)&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;timeoutRunnable = Runnable {&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;Log()&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;counter.value = counter.value!! + 1&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;Log()&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;handler?.postDelayed(timeoutRunnable, 3000)&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;}&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;handler?.post(timeoutRunnable)&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;}&lt;br&gt;}" style="rounded=0;whiteSpace=wrap;html=1;fontFamily=Courier New;fontSize=10;fillColor=none;align=left;verticalAlign=top;" parent="1" vertex="1">
          <mxGeometry x="540" y="670" width="410" height="180" as="geometry" />
        </mxCell>
        <mxCell id="8RQcB87svCS8glU-FJbw-12" value="onDestroy(){&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;super()&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;Log()&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;stopCounter()&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;if(wakeLock != null)&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;wakeLock!!.release()&lt;br&gt;}" style="rounded=0;whiteSpace=wrap;html=1;fontFamily=Courier New;fontSize=10;fillColor=none;align=left;verticalAlign=top;" parent="1" vertex="1">
          <mxGeometry x="540" y="860" width="220" height="90" as="geometry" />
        </mxCell>
        <mxCell id="8RQcB87svCS8glU-FJbw-13" value="stopCounter(){&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;Log()&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;try{&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;handler?.looper?.quit()&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;} catch () {...}&lt;br&gt;}" style="rounded=0;whiteSpace=wrap;html=1;fontFamily=Courier New;fontSize=10;fillColor=none;align=left;verticalAlign=top;" parent="1" vertex="1">
          <mxGeometry x="540" y="960" width="250" height="80" as="geometry" />
        </mxCell>
        <mxCell id="8RQcB87svCS8glU-FJbw-14" value="MainCoroutineWorker : CoroutineWorker&lt;br&gt;(private val context: Context, workerParams: WorkerParameters) : (context, workerParams)" style="rounded=1;whiteSpace=wrap;html=1;fontFamily=Courier New;fontSize=10;fillColor=none;arcSize=3;verticalAlign=top;" parent="1" vertex="1">
          <mxGeometry x="1130" y="30" width="620" height="450" as="geometry" />
        </mxCell>
        <mxCell id="8RQcB87svCS8glU-FJbw-15" value="companion object {&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;private var TAG = this::class.simpleName&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;private var NOTIFICATION_ID = 9973&lt;br&gt;}" style="rounded=0;whiteSpace=wrap;html=1;fontFamily=Courier New;fontSize=10;fillColor=none;align=left;verticalAlign=top;" parent="1" vertex="1">
          <mxGeometry x="1155" y="80" width="295" height="60" as="geometry" />
        </mxCell>
        <mxCell id="8RQcB87svCS8glU-FJbw-17" value="doWork(): Result {&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;if(CounterService.currentService == null) {&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;withContext(Dispatchers.IO){&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;val trackerServiceIntent = Intent(context, CounterService::class.java)&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;ServiceNotification.text = ...&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;ServiceNotification.icon = ...&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;Log()&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;if(Build.VERSION.SDK_INT &amp;gt;= Build.VERSION_CODES.O) {&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;context.startForegroundService(trackerServiceIntent)&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;} else {&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;context.startService(trackerServiceIntent)&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;}&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;}&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;}&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;return Result.success()&lt;br&gt;}" style="rounded=0;whiteSpace=wrap;html=1;fontFamily=Courier New;fontSize=10;fillColor=none;align=left;verticalAlign=top;" parent="1" vertex="1">
          <mxGeometry x="1155" y="170" width="575" height="200" as="geometry" />
        </mxCell>
        <mxCell id="8RQcB87svCS8glU-FJbw-18" value="getForegroundInfo(): ForegroundInfo {&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;ServiceNotifcation.text = ...&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;ServiceNotification.icon = ...&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;val notification = ServiceNotification(context, NOTIFICATION_ID, true)&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;return ForegroundInfo(NOTIFICATION_ID, notification.notification)&lt;br&gt;}" style="rounded=0;whiteSpace=wrap;html=1;fontFamily=Courier New;fontSize=10;fillColor=none;align=left;verticalAlign=top;" parent="1" vertex="1">
          <mxGeometry x="1155" y="390" width="475" height="80" as="geometry" />
        </mxCell>
        <mxCell id="8RQcB87svCS8glU-FJbw-19" value="MyViewModel : AndroidViewModel&lt;br&gt;(application: Application) : (application)&lt;br&gt;private val context: Context = application&lt;br&gt;var currentCounter: MutableLiveData&amp;lt;Int&amp;gt; = CounterService.counter" style="rounded=1;whiteSpace=wrap;html=1;fontFamily=Courier New;fontSize=10;fillColor=none;arcSize=6;verticalAlign=top;" parent="1" vertex="1">
          <mxGeometry x="1140" y="510" width="400" height="130" as="geometry" />
        </mxCell>
        <mxCell id="8RQcB87svCS8glU-FJbw-20" value="startCounter() {&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;RestarterBroadcastReceiver.startWorker(context)&lt;br&gt;}" style="rounded=0;whiteSpace=wrap;html=1;fontFamily=Courier New;fontSize=10;fillColor=none;align=left;verticalAlign=top;" parent="1" vertex="1">
          <mxGeometry x="1155" y="570" width="335" height="50" as="geometry" />
        </mxCell>
        <mxCell id="8RQcB87svCS8glU-FJbw-21" value="RestarterBroadcastReceiver : BroadcastReceiver()" style="rounded=1;whiteSpace=wrap;html=1;fontFamily=Courier New;fontSize=10;fillColor=none;arcSize=4;verticalAlign=top;" parent="1" vertex="1">
          <mxGeometry x="1140" y="670" width="510" height="250" as="geometry" />
        </mxCell>
        <mxCell id="8RQcB87svCS8glU-FJbw-22" value="onReceive(Context, Intent){&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;startWorker(context)&lt;br&gt;}" style="rounded=0;whiteSpace=wrap;html=1;fontFamily=Courier New;fontSize=10;fillColor=none;align=left;verticalAlign=top;" parent="1" vertex="1">
          <mxGeometry x="1160" y="700" width="170" height="50" as="geometry" />
        </mxCell>
        <mxCell id="8RQcB87svCS8glU-FJbw-23" value="companion object {&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;fun startWorker(Context){&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;val constraints = Constraints.Builder().build()&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;val request = OneTimeWorkRequestBuilder&amp;lt;MainCoroutineWorker&amp;gt;()&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;.setExpedited(...)&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;.setConstraints(constraints)&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;.build()&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;WorkManager.getInstance(context).enqueue(request)&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;}&lt;br&gt;}" style="rounded=0;whiteSpace=wrap;html=1;fontFamily=Courier New;fontSize=10;fillColor=none;align=left;verticalAlign=top;" parent="1" vertex="1">
          <mxGeometry x="1160" y="770" width="480" height="130" as="geometry" />
        </mxCell>
        <mxCell id="8RQcB87svCS8glU-FJbw-24" value="ServiceNotification" style="rounded=1;whiteSpace=wrap;html=1;fontFamily=Courier New;fontSize=10;fillColor=none;verticalAlign=top;" parent="1" vertex="1">
          <mxGeometry x="2005" y="225" width="265" height="295" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
